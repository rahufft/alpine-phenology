names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/TB_tempPrecipData.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/all_spp_stats.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949)
str(bl50)
head(bl50)
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
str(bl50)
head(bl50)
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# N
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
JulBloomDate <- function(vari){	#vari <- "Year";
JulBloomDate <- function(vari){	#vari <- "Year";
setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
quality = 100)
colnum <- match(vari,names(blnew))
plot(blnew[,colnum], blnew$startDayOfYear,
main = paste(blnew$Scientific.Name[1], vari, sep = ""),
cex.main = 0.85,
xlab = paste(vari),
ylab = "Julian date of first bloom")
abline(lm(blnew$startDayOfYear~blnew[,colnum]))
dev.off()
graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(
cbind(
data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
str(JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC <<- JYC
}
JulBloomDate("Year")
YearJYC <- JYC
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #O
re-running as a double check
str(bl50)
head(bl50)
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
namesID<-unique(bl50$sppListID)[1]
i<-unique(bl50$sppListID)[1]
spsub <- subset(bl50, sppListID == i)
spsub
i
length(spsub)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
pyr
length(pyr)
nrow(spsub)
table(bl50$sppListID,bl50$Year)
pyr
val <- as.vector(pyr)
val
str(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
head(mins)
blnew
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
head(blnew)
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
colnum <- match(vari,names(blnew))
colnum
library(RCurl)
library(ggplot2)
install.packages(RCurl)
install.packages("RCurl")
install.packages("ggplot2")
library(RCurl)
library(ggplot2)
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data.csv"))
head(bloom)
?getURL
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"))
head(bloom)
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
#This section runs linear regression on Avg Low temp by Year
#hist(bloom$Avg_Lo)
plot(bloom$Year,bloom$Avg_Lo, main="Average Low Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Lo~bloom$Year))
summary(lm(bloom$Avg_Lo~bloom$Year))
#plot(lm(bloom$Avg_Lo~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
str(bl50)
head(bl50)
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
length(namesID)	# 290
head(namesID)
names(bl50)
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){ #I want a vector back, not a list
applythis.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
matches <- match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
bl50[1:nrow(bl50) %in% matches, ]
})
str(minJul.dates)
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
table(min.dates$Year,min.dates$Scientific.Name)
names(min.dates)
table(min.dates$Year,min.dates$plantID)
head(min.dates)
table(min.dates$Year,min.dates$sppListID)
unique(bl50$sppListID)
sort(unique(bl50$sppListID))
x<-2
this.species <- bl50[bl50$sppListID == x,]
this.species
table(this.species$Year,this.species$sppListID)
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
these.rows
matches <- match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
table(matches$Year,matches$sppListID)
head(matches)
?match
install.packages("RCurl")` if you want it
install.packages("ggplot2")
```{r}
library(RCurl)
library(ggplot2)
```
`install.packages("RCurl")` if you want it
install.packages("RCurl")
install.packages("RCurl")
library(RCurl)
library(ggplot2)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"))
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
str(bl50)
head(bl50)
{r}
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
namesID <- 3
vari <- "Year"
i<-unique(bl50$sppListID)[1]
table(bl50$sppListID[bl50$sppListID==i],bl50$Year[bl50$sppListID==i])
sort(unique(bl50$sppListID))
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
# should try %in% for two columns
matches <- match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
bl50[1:nrow(bl50) %in% matches, ]
})
str(minJul.dates)
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
table(min.dates$Year,min.dates$sppListID)
table(this.species$Year,this.species$sppListID)
table(this.species$Year,this.species$sppListID)
head(matches)
table(matches$Year,matches$sppListID)
table(minJul.dates$Year, minJul.dates$sppListID)
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
table(min.dates$Year,min.dates$sppListID)
namesID <- 290
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
table(min.dates$Year,min.dates$sppListID)
sort(unique(bl50$sppListID))
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
# should try %in% for two columns
matches <- match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
bl50[1:nrow(bl50) %in% matches, ]
})
str(minJul.dates)
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
table(min.dates$Year,min.dates$sppListID)
geom_point()+
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
minJul.dates
hist(minJul.dates$startDayOfYear)
hist(min.dates$startDayOfYear)
plot(min.dates$Year,min.dates$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(min.dates$startDayOfYear~min.dates$Year))
summary(lm(min.dates$startDayOfYear~min.dates$Year))
hist(min.dates$startDayOfYear)
logDay<-log(min.dates$startDayOfYear)
hits(logDay)
hist(logDay)
invDay<-1/(min.dates$startDayOfYear)
hist(invDay)
sqrtDay<-sqrt(min.dates$startDayOfYear)
hist(sqrtDay)
hist(logDay)
hist(invDay)
hist(sqrtDay)
plot(min.dates$Year,logDay, main="First Collection Date for All
Species",xlab="Year", ylab="Julian Date")
abline(lm(logDay~min.dates$Year))
summary(lm(logDay~min.dates$Year))
plot(min.dates$Year,min.dates$startDayOfYear, main="First Collection Date for All
Species",xlab="Year", ylab="Julian Date")
abline(lm(min.dates$startDayOfYear~min.dates$Year))
summary(lm(min.dates$startDayOfYear~min.dates$Year))
head min.dates
View(min.dates)
View(min.dates)
View(min.dates)
rm(list=ls())
library(RCurl)
library(ggplot2)
library(data.table)
`install.packages("data.table")`
`install.packages("data.table")`
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data.csv"))
{r, echo=FALSE}
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data.csv"))
head(bloom)
```{r}
{r}
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"))
head(bloom)
names(bloom)
str(bloom)
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
nrow(bl50)
nrow(subset(bloom, bloom$year_plant > 1949))
str(bl50)
head(bl50)
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
#There are multiple bloom dates per year for many species. Want to narrow down to one, earliest, per year
table(bl50$sppListID, bl50$Year)
#bl50 and bloom are the same
identical(bl50, bloom)
#There should be 290 species
length(unique(bl50$sppListID))
#Only need some columns of bloom:bl50 for minimum julian dates
names(bl50[,c(4:5,11,19:26)])
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,c(4:5,11,19:26)]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
unique(merge(this.species, these.rows, by = c("startDayOfYear","Year")))
})
names(minJul.dates) <- unique(bl50$sppListID)
head(minJul.dates[[219]])
min.dates <- do.call(rbind,minJul.dates)
View(min.dates)
minpyear <- table(min.dates$Year, min.dates$sppListID)
mpy.df <- data.frame(minpyear)
mpy.df[mpy.df$Freq > 1,] #when we have ealiestBloomDate in the lapply, that's not unique so it picks a few duplicates, now fixed
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(min.dates$startDayOfYear~min.dates$Year))
#bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
#                header = TRUE, as.is=TRUE)
hist(min.dates$startDayOfYear)#need to log transform data
plot(min.dates$Year,min.dates$startDayOfYear, main="First Collection Date for All
Species",xlab="Year", ylab="Julian Date")
abline(lm(min.dates$startDayOfYear~min.dates$Year))
summary(lm(min.dates$startDayOfYear~min.dates$Year))
#both intercept and slope significant. If include all data, the date of first collection is statistically earlier by 0.062563/year, or 3.75 days earlier over the course of the study period.
#plot(lm(bloom$startDayOfYear ~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
JulBloomDate <- function(variable){
namesID <- unique(min.dates$sppListID)
#Which column number has the variable of interest
colnum <- match(variable,names(min.dates))
JYC <- lapply(namesID, function(x){
blnew <- min.dates[min.dates$sppListID == x,]
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
})
JYC <- do.call(rbind, JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
yr.bl <- JulBloomDate("Year")
head(yr.bl)
#subset that signficantchange over time
yr.sig <- yr.bl[yr.bl$p.value < 0.05,]
#merge the significant species with the min.dates species
yr.sig.min <- merge(yr.sig, min.dates, by.x = "Species", by.y = "Scientific.Name")
ggplot(yr.sig.min, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(yr.sig.min$startDayOfYear~yr.sig.min$Year))
nrow(yr.sig) #53 species
nrow(yr.sig[yr.sig$Slope > 0,]) # no species have later bloom dates over time
nrow(yr.sig[yr.sig$adj.r.squ > 0.25,]) # 18 species have adj.r.squares over 0.25
yr.sig[yr.sig$adj.r.squ > 0.25,]
summary(lm(min.dates$startDayOfYear~min.dates$Year))
JulBloomDate <- function(variable){
namesID <- unique(min.dates$sppListID)
#Which column number has the variable of interest
colnum <- match(variable,names(min.dates))
JYC <- lapply(namesID, function(x){
blnew <- min.dates[min.dates$sppListID == x,]
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
})
JYC <- do.call(rbind, JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
yr.bl <- JulBloomDate("Year")
head(yr.bl)
#subset that signficantchange over time
yr.sig <- yr.bl[yr.bl$p.value < 0.05,]
#merge the significant species with the min.dates species
yr.sig.min <- merge(yr.sig, min.dates, by.x = "Species", by.y = "Scientific.Name")
ggplot(yr.sig.min, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(yr.sig.min$startDayOfYear~yr.sig.min$Year))
nrow(yr.sig) #53 species
nrow(yr.sig[yr.sig$Slope > 0,]) # no species have later bloom dates over time
nrow(yr.sig[yr.sig$adj.r.squ > 0.25,]) # 18 species have adj.r.squares over 0.25
yr.sig[yr.sig$adj.r.squ > 0.25,]
ggplot(yr.sig.min, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(min.dates$startDayOfYear~min.dates$Year))
yr.bl <- JulBloomDate("Year")
head(yr.bl)
#subset that signficantchange over time
yr.sig <- yr.bl[yr.bl$p.value < 0.05,]
#merge the significant species with the min.dates species
yr.sig.min <- merge(yr.sig, min.dates, by.x = "Species", by.y = "Scientific.Name")
ggplot(yr.sig.min, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(yr.sig.min$startDayOfYear~yr.sig.min$Year))
nrow(yr.sig) #53 species
nrow(yr.sig[yr.sig$Slope > 0,]) # no species have later bloom dates over time
nrow(yr.sig[yr.sig$adj.r.squ > 0.25,]) # 18 species have adj.r.squares over 0.25
yr.sig[yr.sig$adj.r.squ > 0.25,]
