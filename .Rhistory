abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
plot(lm(bloom$startDayOfYear ~bloom$Year))
#Bring in Q/All.Projects_by_species/aa_Spapefiles_Maps/aa_QGIS Projects/AlpinePhenologyproject/
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P://alpine-phenology/TB_tempPrecipData"),
header = TRUE, as.is=TRUE)
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P://alpine-phenology/TB_tempPrecipData"),
header = TRUE, as.is=TRUE)
R_input_data/QR_r_input.csv
stats<-read.csv(file.choose("P://alpine-phenology/app_spp_stats.csv"),
header = TRUE, as.is=TRUE)
bl50 <- subset(bloom, bloom$year_plant > 1949)
str(bl50)
head(bl50)
# Pull out the earliest bloom date per year per species
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/TB_tempPrecipData.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/all_spp_stats.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949)
str(bl50)
head(bl50)
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
str(bl50)
head(bl50)
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# N
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
JulBloomDate <- function(vari){	#vari <- "Year";
JulBloomDate <- function(vari){	#vari <- "Year";
setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
quality = 100)
colnum <- match(vari,names(blnew))
plot(blnew[,colnum], blnew$startDayOfYear,
main = paste(blnew$Scientific.Name[1], vari, sep = ""),
cex.main = 0.85,
xlab = paste(vari),
ylab = "Julian date of first bloom")
abline(lm(blnew$startDayOfYear~blnew[,colnum]))
dev.off()
graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(
cbind(
data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
str(JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC <<- JYC
}
JulBloomDate("Year")
YearJYC <- JYC
<<<<<<< HEAD
bloom<-read.csv(path.expand("P:/alpine-phenology/TB_tempPrecipData.csv"),
header = TRUE, as.is=TRUE)
library(RCurl)
library("RCurl", lib.loc="~/R/R-3.2.1/library")
bloom<-read.csv(getURL("https://github.com/rahufft/alpine-phenology/blob/master/QR_final_R_plant_climate_data.csv")
)
bloom<-read.csv(text = getURL("https://github.com/rahufft/alpine-phenology/blob/master/QR_final_R_plant_climate_data.csv"))
head(bloom)
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data.csv"))
head(bloom)
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
library(ggplot)
library(ggplot2)
ggpot(bloom, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth()
ggplot(bloom, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth()
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
ggplot(bloom, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
ggplot(bloom, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
=======
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
>>>>>>> f50fe0525d1ef670926545800ed2f62d7dbf5995
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
<<<<<<< HEAD
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
ggplot(bloom, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()
ggplot(bloom, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
=======
bl50 <- subset(bloom, bloom$year_plant > 1949) #O
re-running as a double check
>>>>>>> f50fe0525d1ef670926545800ed2f62d7dbf5995
str(bl50)
head(bl50)
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
<<<<<<< HEAD
vari <- "Year"
i<-unique(bl50$sppListID)[1]
table(bl50$sppListID,bl50$Year)
bl50$Year[bl50$sppListID==i,]
bl50$Year[bl50$sppListID==i]
table(bl50$sppListID[bl50$sppListID==i],bl50$Year[bl50$sppListID==i])
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew
mins
=======
namesID<-unique(bl50$sppListID)[1]
i<-unique(bl50$sppListID)[1]
spsub <- subset(bl50, sppListID == i)
spsub
i
length(spsub)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
pyr
length(pyr)
nrow(spsub)
table(bl50$sppListID,bl50$Year)
pyr
val <- as.vector(pyr)
val
str(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
>>>>>>> f50fe0525d1ef670926545800ed2f62d7dbf5995
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
<<<<<<< HEAD
blnew
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
blnew
vari
colnum <- match(vari,names(blnew))
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
JYC
JulBloomDate <- function(vari){
#setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
#	jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
#		quality = 100)
#Which column number has the variable of interest
colnum <- match(vari,names(blnew))
#Plot and save the individual species plot
#	plot(blnew[,colnum], blnew$startDayOfYear,
#		main = paste(blnew$Scientific.Name[1], vari, sep = ""),
#		cex.main = 0.85,
#		xlab = paste(vari),
#		ylab = "Julian date of first bloom")
#abline(lm(blnew$startDayOfYear~blnew[,colnum]))
#dev.off()
#graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
str(JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
JulBloomDate("Year")
YearJYC <- JYC
JulBloomDate <- function(vari){
#setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
#	jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
#		quality = 100)
#Which column number has the variable of interest
colnum <- match(vari,names(blnew))
#Plot and save the individual species plot
#	plot(blnew[,colnum], blnew$startDayOfYear,
#		main = paste(blnew$Scientific.Name[1], vari, sep = ""),
#		cex.main = 0.85,
#		xlab = paste(vari),
#		ylab = "Julian date of first bloom")
#abline(lm(blnew$startDayOfYear~blnew[,colnum]))
#dev.off()
#graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
namesID <- unique(bl50$sppListID)
blnew <- c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew, subset(spsub,spsub$startDayOfYear == mins[j,1] & spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
blnew <- rbind(blnew,blnew)
}
head(blnew)
?apply
i
x<-i
bl50[bl50$sppListID == x,]
rm(i)
rm(x)
head(blnew)
ggplot(blnew, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(blnew, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
nrow(blnew)
namesID
namesID <- unique(bl50$sppListID)
blnew <- c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew, subset(spsub,spsub$startDayOfYear == mins[j,1] & spsub$Year == mins[j,2]))
}
#blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
blnew <- rbind(blnew,blnew)
}
head(blnew)
nrow(blnew)
sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
}
minJul.dates <- sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[1]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[1]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
lapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[1]]
minJul.dates[[2]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
lapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(unlist(this.species$Year)), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
aggregate(startDayOfYear~Year, this.species, FUN=min)
})
minJul.dates[[1]]
minJul.dates[[2]]
unique(bl50$sppListID)
str(unique(bl50$sppListID))
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
})
minJul.dates[[2]]
?match
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
this.species[match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear)),]
})
minJul.dates[[2]]
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
matches <- match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
bl50[1:nrow(bl50) %in% matches, ]
})
minJul.dates[[2]]
str(minJul.dates)
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
names(min.dates)
ggplot(min.dates, aes(Year,earliestBloomDate))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
=======
head(mins)
blnew
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
head(blnew)
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
colnum <- match(vari,names(blnew))
colnum
>>>>>>> f50fe0525d1ef670926545800ed2f62d7dbf5995
