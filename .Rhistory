dev.off()
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Avg_Lo, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average Low Temperature") +
xlab("Degrees Celsius")+
ylab("Julian Date")
ggplot(min.dates, aes(Year,Raw_precip))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Precipitation by Year")+
xlab("Year")+
ylab("Precipitation (mm)")
ggplot(min.dates, aes(Year,Raw_Precip))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Precipitation by Year")+
xlab("Year")+
ylab("Precipitation (mm)")
ggplot(min.dates, aes(Raw_Precip, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average Precipitation") +
xlab("Precipitation (mm)")+
ylab("Julian Date")
summary(lm(Raw_Precip~startDayOfYear, data = min.dates))
ggplot(min.dates, aes(Raw_Precip, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average Precipitation") +
xlab("Precipitation (mm)")+
ylab("Julian Date")
summary(lm(startDayOfYear~Raw_Precip, data = min.dates))
summary(lm(startDayOfYear~Avg_Lo, data = min.dates))
ggplot(min.dates, aes(Avg_Lo, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average Low Temperature") +
xlab("Degrees Celsius")+
ylab("Julian Date")
summary(lm(startDayOfYear~Avg_Lo, data = min.dates))
summary(lm(Raw_Precip~Year, data = min.dates))
x
x<-4
blnew <- min.dates[min.dates$sppListID == x,]
head(blnew)
foo1 <- summary(lm(startDayOfYear~Raw_Precip*Avg_Lo, data = blnew))
foo1
foo1$coefficients
foo1$coefficients[2,]
foo1$coefficients[-1,]
t(foo1$coefficients[-1,])
data.frame(t(foo1$coefficients[-1,]))
foo1$coefficients[1,1]
t(foo1$fstatistic)
foo1$fstatistic
foo1$adj.r.squared
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[-1,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
head(JYC)
head(jul.yr.coef)
data.frame(foo1$coefficients[-1,])
foo1$coefficients[-1,]
jul.yr.coef <- data.frame(cbind(foo1$coefficients[-1,],
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
jul.yr.coef <- data.frame(foo1$coefficients[-1,],
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared)
head(jul.yr.coef)
namesID <- unique(min.dates$sppListID)
ml.JYC <- lapply(namesID, function(x){
blnew <- min.dates[min.dates$sppListID == x,]
foo1 <- summary(lm(startDayOfYear~Raw_Precip*Avg_Lo, data = blnew))
jul.yr.coef <- data.frame(foo1$coefficients[-1,],
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared)
})
ml.JYC <- do.call(rbind, ml.JYC)
colnames(ml.JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
head(ml.JYC)
ml.JYC[ml.JYC$p.value < 0.05,]
sig.ml.JYC <- ml.JYC[ml.JYC$p.value < 0.05,]
names(sig.ml.JYC)
row.names(ml.JYC)
names(foo1$coefficients)
names(foo1$coefficients[-1,])
row.names(foo1$coefficients[-1,])
jul.yr.coef <- data.frame(row.names(foo1$coefficients[-1,]),
foo1$coefficients[-1,],
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared)
head(jul.yr.coef)
colnames(ml.JYC) <- c("Variables", "Slope", "StErr", "t.value", "p.value", "Intercept",
ml.JYC <- do.call(rbind, ml.JYC)
colnames(ml.JYC) <- c("Variables", "Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
ml.JYC <- lapply(namesID, function(x){
blnew <- min.dates[min.dates$sppListID == x,]
foo1 <- summary(lm(startDayOfYear~Raw_Precip*Avg_Lo, data = blnew))
jul.yr.coef <- data.frame(row.names(foo1$coefficients[-1,]),
foo1$coefficients[-1,],
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared)
})
ml.JYC <- do.call(rbind, ml.JYC)
colnames(ml.JYC) <- c("Variables", "Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
head(ml.JYC)
sig.ml.JYC <- ml.JYC[ml.JYC$p.value < 0.05,]
table(sig.ml.JYC$Variables)
sig.ml.JYC
sig.interaction.JYC <- ml.JYC[ml.JYC$p.value < 0.05 & ml.JYC$Variables == "Raw_Precip:Avg_Lo",]
sig.interaction.JYC
sig.in.merge <- merge(sig.interaction.JYC, min.dates, by.x = "Species",
by.y = "Scientific.Name")
ggplot(sig.in.merge, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(startDayOfYear~Year, data = sig.in.merge))
ggplot(sig.in.merge, aes(Raw_Precip,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(startDayOfYear~Raw_Precip, data = sig.in.merge))
ggplot(sig.in.merge, aes(Avg_Lo,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(startDayOfYear~Avg_Lo, data = sig.in.merge))
ggplot(sig.in.merge, aes(Raw_Precip,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Precipitation (mm)")+
ylab("Julian Date")
summary(lm(startDayOfYear~Raw_Precip, data = sig.in.merge))
ggplot(sig.in.merge, aes(Avg_Lo,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Degrees Celcius")+
ylab("Julian Date")
summary(lm(startDayOfYear~Avg_Lo, data = sig.in.merge))
#merge two tables
merge(stats, bloom, by = intersect(names(x), names(y)),
by.x = by, by.y = by, all = FALSE, all.x = all, all.y = all,
sort = TRUE, suffixes = c(".x",".y"),
incomparables = NULL, ...)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
#plot(lm(bloom$startDayOfYear ~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
library(RCurl)
library(ggplot2)
library(data.table)
Tbase <- 10
bloom$GDD <- (bloom$Avg_Hi+bloom$AvgLo)/2 - Tbase
(bloom$Avg_Hi+bloom$AvgLo)/2 - Tbase
str(bloom)
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data_.csv"))
head(bloom)
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data_2.csv"))
head(bloom)
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples, errors in lat long when brought in from web
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
hist(bloom$GDD)
Tbase <- 10
bloom$GDD2 <- (bloom$Avg_Hi + bloom$Avg_Lo)/2 - Tbase
Tbase <- -10
bloom$GDD2 <- (bloom$Avg_Hi + bloom$Avg_Lo)/2 - Tbase
hist(bloom$GDD2) #if Tbase is -10
plot(bloom$Year,bloom$GDD, main="Average Growing Degree Days by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$GDD~bloom$Year))
summary(lm(bloom$GDD~bloom$Year))
#plot(lm(bloom$Avg_Lo~bloom$Year))
ggplot(bloom, aes(GDD, Year)) +
geom_point()+
stat_smooth()
ggplot(bloom, aes(Year,GDD)) +
geom_point()+
stat_smooth()
#This section runs linear regression on Precipitation by Year
hist(bloom$Raw_Precip)
plot(bloom$Year,bloom$Raw_Precip, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Raw_Precip~bloom$Year))
summary(lm(bloom$Raw_Precip~bloom$Year))
#plot(lm(bloom$Raw_Precip ~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
nrow(bl50)
nrow(subset(bloom, bloom$year_plant > 1949))
str(bl50)
head(bl50)
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
#There are multiple bloom dates per year for many species. Want to narrow down to one, earliest, per year
table(bl50$sppListID, bl50$Year)
head(table(bl50$sppListID, bl50$Year))
collections<-table(bl50$sppListID,bl50$Year)
str(collection)
str(collections)
collections<-matrix(table(bl50$sppListID,bl50$Year))
str(collections)
collections
collections<-table(bl50$sppListID,bl50$Year)
str(collections)
head(data.frame(collections))
ggplot(collections, aes(Var2, Freq))+
geom_point()+
stat_smooth()
collections<-data.frame(table(bl50$sppListID,bl50$Year))
ggplot(collections, aes(Var2, Freq))+
geom_point()+
stat_smooth()
ggplot(collections, aes(Var2, Freq))+
geom_point()+
stat_smooth()+
xlab("Year")+
ylab("Collections per species")
ggplot(collections, aes(Var2, Freq))+
geom_point()+
stat_smooth()+
xlab("Year")+
ylab("Collections per species")+
theme_bw()
ggplot(collections, aes(Var2, Freq, group = 1))+
geom_point()+
stat_smooth()+
xlab("Year")+
ylab("Collections per species")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(collections, aes(Var2, Freq, group = 1))+
geom_boxplot()+
stat_smooth()+
xlab("Year")+
ylab("Collections per species")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(collections, aes(Var2, Freq))+
geom_boxplot()+
stat_smooth()+
xlab("Year")+
ylab("Collections per species")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
collJ <- data.frame(table(bl50sppListID, bl50$startDayOfYear))
collJ <- data.frame(table(bl50$sppListID, bl50$startDayOfYear))
ggplot(collJ, aes(Var2, Freq))+
geom_boxplot()+
stat_smooth()+
xlab("Year")+
ylab("Collections per Julian date")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(collJ, aes(Var2, Freq))+
geom_point()+
stat_smooth()+
xlab("Year")+
ylab("Collections per Julian date")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(collJ, aes(Var2, Freq, group =1))+
stat_smooth()+
xlab("Year")+
ylab("Collections per Julian date")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(collJ, aes(Var2, Freq, group =1))+
stat_smooth()+
xlab("Julian date")+
ylab("Collections per species")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
#bl50 and bloom are the same
identical(bl50, bloom)
#There should be 290 species
length(unique(bl50$sppListID))
#Only need some columns of bloom:bl50 for minimum julian dates
names(bl50[,c(4:5,11,19:26)])
names(bl50[,c(4:5,11,19:27)])
names(bl50[,c(4:5,11,19:28)])
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,c(4:5,11,19:28)]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
unique(merge(this.species, these.rows, by = c("startDayOfYear","Year")))
})
names(minJul.dates) <- unique(bl50$sppListID)
head(minJul.dates[[219]])
min.dates <- do.call(rbind,minJul.dates)
table(min.dates$Year, min.dates$sppListID)
head(table(min.dates$Year, min.dates$sppListID))
minpyear <- table(min.dates$Year, min.dates$sppListID)
mpy.df <- data.frame(minpyear)
mpy.df[mpy.df$Freq > 1,] #when we have ealiestBloomDate in the lapply, that's not unique so it picks a few duplicates, now fixed
library(psych)
cor.plot(cor(min.dates[,-(1:4)]), numbers = TRUE)
cor(min.dates[,-(1:4)])
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Avg_Hi, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average High Temperature") +
xlab("Degrees Celsius")+
ylab("Julian Date")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Avg_Lo, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average Low Temperature") +
xlab("Degrees Celsius")+
ylab("Julian Date")
summary(lm(startDayOfYear~Avg_Lo, data = min.dates))
ggplot(min.dates, aes(Year,Raw_Precip))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Precipitation by Year")+
xlab("Year")+
ylab("Precipitation (mm)")
summary(lm(Raw_Precip~Year, data = min.dates))
ggplot(min.dates, aes(Avg_Lo, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Average Low Temperature") +
xlab("Degrees Celsius")+
ylab("Julian Date")
summary(lm(startDayOfYear~Avg_Lo, data = min.dates))
ggplot(min.dates, aes(GDD, startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Growing Degree Days") +
xlab("GDD")+
ylab("Julian Date")
summary(lm(startDayOfYear~GDD, data = min.dates))
ggplot(min.dates, aes(Year,GDD))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Growing Degree Days by Year")+
xlab("Year")+
ylab("Growing Degree Day")
summary(lm(Raw_Precip~Year, data = min.dates))
summary(lm(GDD~Year, data = min.dates))
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(min.dates$startDayOfYear~min.dates$Year))
JulBloomDate <- function(variable){
namesID <- unique(min.dates$sppListID)
#Which column number has the variable of interest
colnum <- match(variable,names(min.dates))
JYC <- lapply(namesID, function(x){
blnew <- min.dates[min.dates$sppListID == x,]
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
})
JYC <- do.call(rbind, JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
gdd.bl <- JulBloomDate("GDD")
head(yr.bl)
gdd.sig <- gdd.bl[gdd.bl$p.value < 0.05,]
gdd.sig.min <- merge(gdd.sig, min.dates, by.x = "Species", by.y = "Scientific.Name")
ggplot(gdd.sig.min, aes(Raw_gdd,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by precipitation")+
xlab("Precipitation (mm)")+
ylab("Julian Date")
head(gdd.sig.min)
ggplot(gdd.sig.min, aes(GDD,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by GDD")+
xlab("Precipitation (mm)")+
ylab("Julian Date")
summary(lm(gdd.sig.min$startDayOfYear~gdd.sig.min$Year))
ggplot(gdd.sig.min, aes(GDD,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by GDD")+
xlab("GDD")+
ylab("Julian Date")
nrow(gdd.sig) #53 species
nrow(gdd.sig[gdd.sig$Slope > 0,]) # no species have later bloom dates over time
library(RCurl)
library(ggplot2)
library(data.table)
head(bloom)
bloom$GDD2
ggplot(collections, aes(Var2, Freq))+
geom_boxplot()+
stat_smooth()+
xlab("Year")+
ylab("Collections per species")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(collJ, aes(Var2, Freq, group =1))+
stat_smooth()+
xlab("Julian date")+
ylab("Collections per species")+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1))
head(table(bl50$sppListID, bl50$Year))
library(RCurl)
library(ggplot2)
library(data.table)
ggplot(min.dates, aes(Year,GDD))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Growing Degree Days by Year")+
xlab("Year")+
ylab("Growing Degree Day")
summary(lm(GDD~Year, data = min.dates))
hist(bloom$GDD)
hist(bloom$GDD2) #if Tbase is -10
plot(bloom$Year,bloom$GDD, main="Average Growing Degree Days by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$GDD~bloom$Year))
summary(lm(bloom$GDD~bloom$Year))
#plot(lm(bloom$Avg_Lo~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
ggplot(bloom, aes(Year,GDD)) +
geom_point()+
stat_smooth() #uses loess()
names(bloom)
?cumsum
cumsum(bloom$GDD2)
head(bloom)
