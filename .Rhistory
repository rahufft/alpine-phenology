dms <- grep("w", bloom$decimalLongitude)
dms
dms <- grep("W", bloom$decimalLongitude)
dms
dms <- grep("W", bloom$decimalLongitude, value = TRUE)
dms
minutes <- regmatches(dms, gregexpr("(?>=').*", dms)
)
minutes <- regmatches(dms, gregexpr("(?>=').*", dms, perl=TRUE))
minutes
minutes <- regmatches(dms, gregexpr("(?<=').*", dms, perl=TRUE))
minutes
dms
minutes <- regmatches(dms, gregexpr("(?>').*", dms, perl=TRUE))
minutes
minutes <- unlist(lapply(strsplit(dms, "'", fixed=TRUE))
)
minutes <- unlist(lapply(strsplit(dms, "'", fixed=TRUE), '[', 2))
minutes
minutes <- unlist(lapply(strsplit(dms, "'", fixed=TRUE), ',', 2))
?strsplit
minutes <- unlist(lapply(strsplit(dms, "'", fixed=FALSE), '[', 2))
minutes
minutes <- unlist(lapply(strsplit(dms, "[']", fixed=FALSE)))
,
minutes <- unlist(lapply(strsplit(dms, "[']", fixed=FALSE, '[', 2))
strsplit(dms, "[']", fixed=FALSE)
strsplit(dms, "'", fixed=TRUE)
minutes <- unlist(lapply(strsplit(dms, "'", fixed=TRUE), '[', 1))
minutes
as.numeric(as.character(minutes))
as.numeric(as.character(substr(minutes,1,3))
)
degrees <- as.numeric(as.character(substr(minutes,1,3)))
substr(minutes,1,3)
degrees
as.numeric(as.character(unlist(lapply(strsplit(minutes, " ", fixed=TRUE), '[', 1))))
str(degrees)
unlist(lapply(strsplit(bloom$decimalLongitude)))
unlist(lapply(strsplit(bloom$decimalLongitude), '[', 1))
unlist(lapply(strsplit(bloom$decimalLongitude, " ", fixed=TRUE), '[', 1))
unlist(lapply(strsplit(bloom$decimalLongitude, " "), '[', 1))
unlist(lapply(strsplit(bloom$decimalLongitude, " ",
fixed=TRUE), '[', 1))
pr1981 <- as.list(ls_prism_data()[ls_prism_data()$files %in%
(grep("1981", ls_prism_data()$files, value = TRUE)),1])
pr1981[1]
prism_image(pr1981[1])
pr1981 <- as.list(ls_prism_data()[ls_prism_data()$files %in%
(grep("1981", ls_prism_data()$files, value = TRUE)),])
prism_image(pr1981[1][1,1])
prism_image(pr1981[[1]][1,1])
prism_image(ls_prism_data()[pr1981[1],1])
pr1981[1]
?read.delim
latlongs <- read.delim(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/Sampling Points/LatLongabove3200m.txt"), sep=",")
head(latlongs)
tmin@z
apply(latlongs[,3:4], 1, FUN = function(x) paste(x, sep = ","))
apply(latlongs[,3:4], 1, FUN = function(x) paste(x, collapse = ","))
apply(latlongs[,3:4], 1, FUN = function(x) as.numeric(paste(x, collapse = ",")))
str(apply(latlongs[,3:4], 1, FUN = function(x) paste(x, collapse = ",")))
str(as.numieric(as.character(apply(latlongs[,3:4],
1,
FUN = function(x) paste(x, collapse = ",")))))
str(as.numierci(as.character(apply(latlongs[,3:4],
1,
FUN = function(x) paste(x, collapse = ",")))))
str(as.numeric(as.character(apply(latlongs[,3:4],
1,
FUN = function(x) paste(x, collapse = ",")))))
apply(latlongs[,3:4],1,FUN = function(x){
paste(as.numeric(as.character(x)), collapse = ",")
})))
apply(latlongs[,3:4],1,FUN = function(x){
paste(as.numeric(as.character(x)), collapse = ",")
})
str(apply(latlongs[,3:4],1,FUN = function(x){
paste(as.numeric(as.character(x)), collapse = ",")
}))
str(apply(latlongs[,3:4],1,FUN = function(x){
as.numeric(as.character(paste(x, collapse = ",")))
}))
warnings()
str(apply(latlongs[,3:4],1,FUN = function(x){
paste(as.numeric(as.character(x)), collapse = ",")
}))
as.numeric(as.character(latlongs[,3:4]))
str(apply(latlongs[,3:4],1,FUN = function(x){
paste(x, collapse = ",")
}))
latlongs <- apply(latlongs[,3:4],1,FUN = function(x){
paste(x, collapse = ",")
})
latlongs[1]
prism_slice(latlongs[1],pr1981[1])
prism_slice(latlongs[1],ls_prism_data()[3,1])
latlongs[1]
grep("1981",ls_prism_data()[,1],value = TRUE)
sliceyear <- grep("tmin", sliceyear, value = TRUE)
sliceyear <- grep("1981",ls_prism_data()[,1],value = TRUE)
sliceyear <- grep("tmin", sliceyear, value = TRUE)
sliceyear
str(ls_prism_data()[3,1])
str(ls_prism_data()[3,])
ls_prism_data()[3,]
?overlay
ls_prism_data()[ls_prism_data()$files %in%
(grep("1981", ls_prism_data()$files)),]
which(ls_prism_data()[ls_prism_data()$files %in%
(grep("1981", ls_prism_data()$files)),])
which(ls_prism_data()$files %in%
(grep("1981", ls_prism_data()$files)),])
which(ls_prism_data()$files %in%
(grep("1981", ls_prism_data()$files)))
sliceyear
latlongs[1]
prism_slice(c(40.9074207425,-106.688031183), sliceyear)
prism_slice(c(-106.688031183,40.9074207425), sliceyear)
p <- prism_slice(c(-106.688031183,40.9074207425), sliceyear)
str(p)
p$data
sliceyear <- lapply(1981:2011, function(x){
sliceyear <- grep(as.character(x), ls_prism_data()[,1],value = TRUE)
grep("tmin", sliceyear, value = TRUE)
})
get_prism_dailys(type="tmax",
minDate = "1981-01-01",
maxDate = "2011-12-31", keepZip = FALSE)
head(p$data)
sliceyear[1]
sliceyear[1]$data
str(sliceyear[1])
head(latlongs)
latlongs <- read.delim(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/Sampling Points/LatLongabove3200m.txt"), sep=",")
head(latlongs)
mapply(FUN = function(x,y){
c(x,y)
},
latlongs$Long,latlongs$Lat
)
ll <- mapply(FUN = function(x,y){
c(x,y)
},
latlongs$Long,latlongs$Lat
)
ll[1]
ll[,1]
prism_slice(ll[,1],ls_prism_data()[3,1])
head(ll)
head(ll[,1:10])
head(sliceyear)
str(sliceyear)
head(p$data)
p$data$data
mean(p$data$data)
latlong[,1:5]
ll[,1:5]
test1981 <- lapply(ll[,1:5], function(y){
ps <- prism_slice(y, sliceyear[1])
})
as.list(ll)
test1981 <- lapply(1:5, function(y){
ps <- prism_slice(ll[,y], sliceyear[1])
})
ll[,2]
sliceyear[1]
test1981 <- lapply(1:5, function(y){
prism_slice(ll[,y], sliceyear)
})
prism_slice(ll[,1], sliceyear)
prism_slice(ll[,1],ls_prism_data()[3,1])
prism_slice(ll[,1],ls_prism_data()[,1])
prism_slice(ll[,1],ls_prism_data()[3,1]) # going through all min and max in folder, takes hours!
prism_slice(ll[,1],ls_prism_data()[3:4,1]) # going through all min and max in folder, takes hours!
ptest <- prism_slice(ll[,1],ls_prism_data()[3:4,1]) # going through all min and max in folder, takes hours!
head(ptest)
ptest$data
ls_prism_data()[,1]
ls_prism_data()[1,1]
length(ls_prism_data()[,1])
sliceyear
sliceyear[1,1]
sliceyear[1]
sliceyear[1][1]
sliceyear[[1]]
str(sliceyear)
sliceyear[[1]][1]
sliceyear[[1]][1][1,1]
str(sliceyear[[1]][1])
sliceyear[[1]][1]
ptest <- prism_slice(ll[,1],sliceyear[[1]][1:10]) # going through all min and max in folder, takes hours!
head(ptest)
ptest$data
test1981 <- lapply(1:5, function(y){
prism_slice(ll[,y], sliceyear[[1]][1:10])
})
test1981
test1981[[1]]$data
test1981[[2]]$data
test1981$data
test1981[[1]]$data
do.call(rbind, test1981)
sapply(test1981, function(x){
do.call(rbind, x$data)
})
lapply(test1981, function(x){
do.call(rbind, x$data)
})
lapply(test1981, function(x){
do.call(rbind, t(x$data))
})
lapply(test1981, function(x){
do.call(cbind, x$data)
})
lapply(test1981, function(x){
do.call(data.frame, x$data)
})
do.call(rbind(lapply(test1981, function(x){
do.call(data.frame, x$data)
}))
do.call(rbind, lapply(test1981, function(x){
do.call(data.frame, x$data)
}))
test1981one <- do.call(rbind, lapply(test1981, function(x){
do.call(data.frame, x$data)
}))
# don't need to do by year because that data is in the output, can aggregate over
?aggregate
aggregate(data~date, data = test1981one, FUN = mean)
ls_prism_data()[c(1:3,20000:20003),1]
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
})
avgTemps[[1]]
avgTemps[[1]]$data
avgTemps[[1]]
avgTemps[[1]][1]$data
avgTemps[[1]][1]
avgTemps[[1]][2]
avgTemps[[1]][3]
str(avgTemps[[1]][3])
str(avgTemps[[1]])
avgTemps[[1]][[1]]$data
avgTemps[[1]][[2]]$data
avgTemps[[1]][[3]]
avgTemps[[1]][[3]]$data
avgTemps[[1]][[4]]$data
avgTemps[[1]][[5]]$data
avgTemps[[1]][[6]]$data
avgTemps[[1]][[]]$data
avgTemps[[1]][[1:5]]$data
avgTemps[[1]][[5]]$data
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(1:5, function(y){
slicedata <- prism_slice(ll[,y],sliceyear)
slicedataone <- do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, x$data)
}))
slicedataone
})
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(1:5, function(y){
slicedata <- prism_slice(ll[,y],sliceyear)
}))
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, x$data)
slicedataone
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(1:5, function(y){
slicedata <- prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, x$data)
slicedataone
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(1:5, function(y){
slicedata <- prism_slice(ll[,y],sliceyear)
}
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, x$data)
slicedataone
})))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(1:5, function(y){
slicedata <- prism_slice(ll[,y],sliceyear)
}
do.call(rbind, lapply(slicedata, function(x){
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, x$data)
slicedataone
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, x$data)
}))
})
str(avgTemps[[1]])
head(avgTemps[[1]])
head(avgTemps[[2]])
head(avgTemps[[3]])
head(avgTemps[[2]])
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, c(x$data, rownames(x$data))
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, c(x$data, rownames(x$data)))
}))
})
str(avgTemps[[1]]) # min
# can aggregate over date, lappy over min and max
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, unname(x$data))
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:5, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(slicedata, function(x){
do.call(data.frame, setNames(x$data, NULL))
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:3, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind,
lapply( lapply(slicedata, function(y){
data.frame(y, rownames(y))
}), function(x){
do.call(data.frame, x$data)
}))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:3, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind,
lapply( lapply(slicedata, function(y){
data.frame(y$data, rownames(y$data))
}), function(x){
do.call(data.frame, x$data)
}))
})
sliceyear <- grep(
"tmin"
, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
lapply(slicedata, function(y){ #list
data.frame(y$data, rownames(y$data))
})
slicedata <- lapply(1:3, function(y){
prism_slice(ll[,y],sliceyear)
})
lapply(slicedata, function(y){ #list
data.frame(y$data, rownames(y$data))
})
lapply(slicedata, function(y){ #list
data.frame(y$data, Var = rownames(y$data))
})
lapply( lapply(slicedata, function(y){ #list
data.frame(y$data, Var = rownames(y$data))
}), function(x){
do.call(data.frame, x$data)
})
lapply( lapply(slicedata, function(y){ #list
data.frame(y$data, Var = rownames(y$data))
}))
lapply(slicedata, function(y){ #list for do.call
data.frame(y$data, Var = rownames(y$data))
})
lapply(slicedata, function(y){ #list for the outer lapply
data.frame(y$data, Var = rownames(y$data))
})
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[c(1:3,20000:20003),1], value = TRUE)
slicedata <- lapply(1:3, function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, #function for do.call
lapply( #list for do.call
( lapply(slicedata, function(y){ #list for the outer lapply
data.frame(y$data, Var = rownames(y$data))
}) ),    # the list for the inner lapply
function(x){
do.call(data.frame, x)
})
)
})
str(avgTemps[[1]]) # min
head(avgTemps[[2]]) # max
avgTemps
length(ll)
1:length(ll)
library(RCurl)
library(ggplot2)
library(data.table)
library(raster)
require(rgdal)
library(devtools)devtools::install_github("ropensci/prism")
library(prism)
library(devtools)
library(prism)
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[,1], value = TRUE)
slicedata <- lapply(1:length(ll), function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(
( lapply(slicedata, function(y){
data.frame(y$data, Var = rownames(y$data))
}) ),
function(x){
do.call(data.frame, x)
})
)
})
options(prism.path = "Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS
Projects/Alpine Phenology Project/Climate_MEDL")
### Real one after above testing
# can aggregate over date, lappy over min and max
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[,1], value = TRUE)
slicedata <- lapply(1:length(ll), function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(
( lapply(slicedata, function(y){
data.frame(y$data, Var = rownames(y$data))
}) ),
function(x){
do.call(data.frame, x)
})
)
})
str(avgTemps[[1]]) # min
head(avgTemps[[2]]) # max
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[,1], value = TRUE)
slicedata <- lapply(1:length(ll), function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(
( lapply(slicedata, function(y){
data.frame(y$data, Var = rownames(y$data))
}) ),
function(x){
do.call(data.frame, x)
})
)
})
### Real one after above testing
# can aggregate over date, lappy over min and max
avgTemps <- lapply(c("tmin","tmax"), function(x){
sliceyear <- grep(x, ls_prism_data()[1:1000,1], value = TRUE)
slicedata <- lapply(1:length(ll), function(y){
prism_slice(ll[,y],sliceyear)
})
do.call(rbind, lapply(
( lapply(slicedata, function(y){
data.frame(y$data, Var = rownames(y$data))
}) ),
function(x){
do.call(data.frame, x)
})
)
})
#str(avgTemps[[1]]) # min
#head(avgTemps[[2]]) # max
