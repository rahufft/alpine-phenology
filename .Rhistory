names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
<<<<<<< HEAD
vari <- "Year"
i<-unique(bl50$sppListID)[1]
table(bl50$sppListID,bl50$Year)
bl50$Year[bl50$sppListID==i,]
bl50$Year[bl50$sppListID==i]
table(bl50$sppListID[bl50$sppListID==i],bl50$Year[bl50$sppListID==i])
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew
mins
=======
namesID<-unique(bl50$sppListID)[1]
i<-unique(bl50$sppListID)[1]
spsub <- subset(bl50, sppListID == i)
spsub
i
length(spsub)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
pyr
length(pyr)
nrow(spsub)
table(bl50$sppListID,bl50$Year)
pyr
val <- as.vector(pyr)
val
str(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
>>>>>>> f50fe0525d1ef670926545800ed2f62d7dbf5995
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
<<<<<<< HEAD
blnew
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
blnew
vari
colnum <- match(vari,names(blnew))
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
JYC
JulBloomDate <- function(vari){
#setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
#	jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
#		quality = 100)
#Which column number has the variable of interest
colnum <- match(vari,names(blnew))
#Plot and save the individual species plot
#	plot(blnew[,colnum], blnew$startDayOfYear,
#		main = paste(blnew$Scientific.Name[1], vari, sep = ""),
#		cex.main = 0.85,
#		xlab = paste(vari),
#		ylab = "Julian date of first bloom")
#abline(lm(blnew$startDayOfYear~blnew[,colnum]))
#dev.off()
#graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
str(JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
JulBloomDate("Year")
YearJYC <- JYC
JulBloomDate <- function(vari){
#setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
#	jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
#		quality = 100)
#Which column number has the variable of interest
colnum <- match(vari,names(blnew))
#Plot and save the individual species plot
#	plot(blnew[,colnum], blnew$startDayOfYear,
#		main = paste(blnew$Scientific.Name[1], vari, sep = ""),
#		cex.main = 0.85,
#		xlab = paste(vari),
#		ylab = "Julian date of first bloom")
#abline(lm(blnew$startDayOfYear~blnew[,colnum]))
#dev.off()
#graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(cbind(data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC
}
namesID <- unique(bl50$sppListID)
blnew <- c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew, subset(spsub,spsub$startDayOfYear == mins[j,1] & spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
blnew <- rbind(blnew,blnew)
}
head(blnew)
?apply
i
x<-i
bl50[bl50$sppListID == x,]
rm(i)
rm(x)
head(blnew)
ggplot(blnew, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(blnew, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
nrow(blnew)
namesID
namesID <- unique(bl50$sppListID)
blnew <- c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew, subset(spsub,spsub$startDayOfYear == mins[j,1] & spsub$Year == mins[j,2]))
}
#blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
blnew <- rbind(blnew,blnew)
}
head(blnew)
nrow(blnew)
sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
}
minJul.dates <- sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[1]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[1]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
lapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[1]]
minJul.dates[[2]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
lapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- sapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(this.species$Year), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
sapply(unique(unlist(this.species$Year)), function(y){
this.species[this.species$Year==y & this.species$startDayOfYear == min(this.species$startDayOfYear),]
#this.sp.this.year <- this.species[this.species$Year == y,]
#this.sp.this.year[bl50$startDayOfYear == y & min()
})
})
minJul.dates[[2]]
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
aggregate(startDayOfYear~Year, this.species, FUN=min)
})
minJul.dates[[1]]
minJul.dates[[2]]
unique(bl50$sppListID)
str(unique(bl50$sppListID))
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
})
minJul.dates[[2]]
?match
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
this.species[match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear)),]
})
minJul.dates[[2]]
#This gives me the year and
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
matches <- match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
bl50[1:nrow(bl50) %in% matches, ]
})
minJul.dates[[2]]
str(minJul.dates)
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
names(min.dates)
ggplot(min.dates, aes(Year,earliestBloomDate))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
=======
head(mins)
blnew
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
head(blnew)
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
colnum <- match(vari,names(blnew))
colnum
>>>>>>> f50fe0525d1ef670926545800ed2f62d7dbf5995
library(RCurl)
library(ggplot2)
bloom<-read.csv(text = getURL("https://raw.githubusercontent.com/rahufft/alpine-phenology/master/QR_final_R_plant_climate_data.csv"))
head(bloom)
#created new column that divides Raw_precip by 100 (see PRISM documentation) to get mm
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples
#Climate data figures
#This section runs linear regression on Avg High temp by Year
#hist(bloom$Avg_Hi)
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
#plot(lm(bloom$Avg_Hi~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
#This section runs linear regression on Avg Low temp by Year
#hist(bloom$Avg_Lo)
plot(bloom$Year,bloom$Avg_Lo, main="Average Low Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Lo~bloom$Year))
summary(lm(bloom$Avg_Lo~bloom$Year))
#plot(lm(bloom$Avg_Lo~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
#This section runs linear regression on Precipitation by Year
#hist(bloom$Precip_mm)
plot(bloom$Year,bloom$Precip_mm, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Precip_mm~bloom$Year))
summary(lm(bloom$Precip_mm~bloom$Year))
#plot(lm(bloom$Precip_mm ~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
str(bloom)  #tells me column name, data type and examples
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples
?read.csv
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
plot(bloom$Year,bloom$Avg_Lo, main="Average Low Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Lo~bloom$Year))
summary(lm(bloom$Avg_Lo~bloom$Year))
plot(bloom$Year,bloom$Precip_mm, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
hist(bloom$Precip_mm)
names(bloom)
names(bloom)
hist(bloom$Raw_Precip)
plot(bloom$Year,bloom$Raw_Precip, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Raw_Precip~bloom$Year))
summary(lm(bloom$Raw_Precip~bloom$Year))
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
nrow(bl50)
nrow(subset(bloom, bloom$year_plant > 1949))
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
table(bl50$sppListID, bl50$Year)
x <- 4
this.species <- bl50[bl50$sppListID == x,]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
these.rows
which(outer(these.rows$Year, these.rows$startDayOfYear, "==") &
outer(this.species$Year, this.species$startDayOfYear, "=="),
arr.ind = TRUE)
which(outer(these.rows$Year, this.species$startDayOfYear, "==") &
outer(this.species$Year, these.rows$startDayOfYear, "=="),
arr.ind = TRUE)
outer(these.rows$Year, this.species$startDayOfYear, "==")
which(outer(these.rows$Year, this.species$Year, "==") &
outer(this.species$startDayOfYear, these.rows$startDayOfYear, "=="),
arr.ind = TRUE)
outer(these.rows$Year, this.species$Year, "==")
outer(this.species$startDayOfYear, these.rows$startDayOfYear, "==")
which(outer(these.rows$Year, this.species$Year, "==") &
outer(these.rows$startDayOfYear,this.species$startDayOfYear, "=="),
arr.ind = TRUE)
which(outer(this.species$Year, these.rows$Year,"==") &
outer(this.species$startDayOfYear, these.rows$startDayOfYear,"=="),
arr.ind = TRUE)
unique(which(outer(this.species$Year, these.rows$Year,"==") &
outer(this.species$startDayOfYear, these.rows$startDayOfYear,"=="),
arr.ind = TRUE))
matches <- unique(which(outer(this.species$Year, these.rows$Year,"==") &
outer(this.species$startDayOfYear, these.rows$startDayOfYear,"=="),
arr.ind = TRUE))
this.species[1:nrow(this.species) %in% matches,]
minsfoo <- this.species[1:nrow(this.species) %in% matches,]
table(minsfoo$Year,minsfoo$startDayOfYear)
match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear))
matches <- unique(match(interaction(this.species$Year,this.species$startDayOfYear),
interaction(these.rows$Year, these.rows$startDayOfYear)))
matches
complete.cases(matches)
matches(complete.cases(matches))
matches[complete.cases(matches)]
matches <- matches[complete.cases(matches)]
bl50[1:nrow(bl50) %in% matches, ]
foo <- bl50[1:nrow(bl50) %in% matches, ]
table(foo$Year,foo$startDayOfYear)
head(bl50)
foo <- unique(bl50[1:nrow(bl50) %in% matches, -1])
table(foo$Year,foo$startDayOfYear)
library(data.table)
names(bl50)
this.species <- bl50[bl50$sppListID == x,c(4:5,7,11,19:26)]
head(this.species)
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
merge(this.species, these.rows, by = c("startDayOfYear","Year"))
unique(merge(this.species, these.rows, by = c("startDayOfYear","Year")))
minJul.dates <- lapply(unique(bl50$sppListID), function(x){
this.species <- bl50[bl50$sppListID == x,c(4:5,7,11,19:26)]
these.rows <- aggregate(startDayOfYear~Year, this.species, FUN=min)
unique(merge(this.species, these.rows, by = c("startDayOfYear","Year")))
})
str(minJul.dates)
head(minJul.dates)
head(minJul.dates[[20]])
names(minJul.dates) <- unique(bl50$sppListID)
head(minJul.dates[[20]])
head(minJul.dates[[219]])
min.dates <- do.call(rbind,minJul.dates)
head(min.dates)
table(min.dates$Year,min.dates$sppListID)
ggplot(min.dates, aes(Year,Avg_Hi))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average High Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,Avg_Lo))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Average Low Temperature by Year")+
xlab("Year")+
ylab("Degrees Celsius")
ggplot(min.dates, aes(Year,startDayOfYear))+
geom_point()+
stat_smooth(method="lm")+
theme_bw()+
labs(title="Earliest Bloom Date by Year")+
xlab("Year")+
ylab("Julian Date")
summary(lm(min.dates$startDayOfYear~min.dates$Year))
