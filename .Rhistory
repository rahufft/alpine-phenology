#Bring in Q/All.Projects_by_species/aa_Spapefiles_Maps/aa_QGIS Projects/AlpinePhenologyproject/
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("Q:\\Research\\All_Projects_by_Species\\"),
header = TRUE, as.is=TRUE)
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples
foo <- function(x){min(bloom$startDayOfYear~bloom$Year)}
namesID <- unique(bloom$sppListID)
length(namesID)	# 290
head(namesID)
names(bloom)
table(bloom$sppListID, bloom$startDayOfYear)
names <- unique(bloom$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
hist(bloom$Avg_Hi)
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
foo(bloom)
foo <- function(x){min(x$startDayOfYear~x$Year)}
foo(bloom)
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P://alpine-phenology/TB_tempPrecipData"),
header = TRUE, as.is=TRUE)
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples
hist(bloom$Avg_Hi)
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
plot(lm(bloom$Avg_Hi~bloom$Year))
hist(bloom$Avg_Lo)
plot(bloom$Year,bloom$Avg_Lo, main="Average Low Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Lo~bloom$Year))
summary(lm(bloom$Avg_Lo~bloom$Year))
plot(lm(bloom$Avg_Lo~bloom$Year))
hist(bloom$Raw_Precip)
plot(bloom$Year,bloom$Raw_Precip, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Raw_Precip~bloom$Year))
summary(lm(bloom$Raw_Precip~bloom$Year))
plot(lm(bloom$Raw_Precip ~bloom$Year)) #check residuals for heteroscedasticity and nonlinearity
hist(bloom$Avg_Hi)
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P://alpine-phenology/TB_tempPrecipData"),
header = TRUE, as.is=TRUE)
head(bloom)
names(bloom)
str(bloom)  #tells me column name, data type and examples
plot(bloom$Year,bloom$Raw_Precip, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Raw_Precip~bloom$Year))
summary(lm(bloom$Raw_Precip~bloom$Year))
plot(bloom$Year,bloom$Precip_mm, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Precip_mm~bloom$Year))
summary(lm(bloom$Precip_mm~bloom$Year))
plot(bloom$Year,bloom$Avg_Lo, main="Average Low Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Lo~bloom$Year))
summary(lm(bloom$Avg_Lo~bloom$Year))
plot(bloom$Year,bloom$Avg_Hi, main="Average High Temperature by Year",xlab="Year", ylab="Degrees Celsius")
abline(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Hi~bloom$Year))
summary(lm(bloom$Avg_Lo~bloom$Year))
summary(lm(bloom$Precip_mm~bloom$Year))
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P:\\Seeds\\"),
header = TRUE, as.is=TRUE)
head(bloom)
names(bloom)
str(bloom)
hist(bloom$Work.Date)
Year<-as.Date(Work.Date,"%m/%d/%Y")
Year<-as.Date(bloom$Work.Date,"%m/%d/%Y")
str(bloom$Year)
str(bloom)  #tells me column name, data type and examples
Year
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P:\\Seeds\\"),
header = TRUE, as.is=TRUE)
str(bloom)
Year<-as.Date(bloom$Work.Date,"%m/%d/%Y")
%Y
bloom$Year<-as.Date(bloom$Work.Date,"%Y")
head(bloom)
bloom$Year<-as.Date(bloom$Work.Date,"%m/%d/%Y")
head(bloom)
bloom$Year<-substr(as.Date(bloom$Work.Date,"%m/%d/%Y"),1,4)
head(bloom)
hist(bloom$Year)
bloom$Year<-as.Numberic(substr(as.Date(bloom$Work.Date,"%m/%d/%Y"),1,4))
bloom$Year<-as.numeric(substr(as.Date(bloom$Work.Date,"%m/%d/%Y"),1,4))
str(bloom)
hist(bloom$Year)
hist(bloom$Year, +right=FALSE)
hist(bloom$Year, + right=FALSE)
colors = c("black")
hist(bloom$Year,    # apply the hist function
+   right=FALSE,    # intervals closed on the left
+   col=black,     # set the color palette
+   main="Number of Seed Collections", # the main title
+   xlab="Year")       # x-axis label
hist(bloom$Year,    # apply the hist function
right=FALSE,    # intervals closed on the left
col=black,     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")
hist(bloom$Year,    # apply the hist function
right=FALSE,    # intervals closed on the left
col=24,     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
hist(bloom$Year,    # apply the hist function
right=FALSE,    # intervals closed on the left
col=7,     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")
colors()
hist(bloom$Year,    # apply the hist function
right=FALSE,    # intervals closed on the left
col="black",     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
hist(bloom$Year,    # apply the hist function
right=FALSE,    # intervals closed on the left
col="grey",     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
bloom$Year
barplot(bloom$Year,    # apply the hist function
right=FALSE,    # intervals closed on the left
col="grey",     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
barplot(bloom$Year,    # apply the hist function
col="grey",     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
barplot(bloom$Year,    # apply the hist function
col="grey",     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
aggregate()
help.aggregate
help(aggregate)
hist(bloom$Year)
table(bloom$Year, bloom$Work.Date)
rowSums(table(bloom$Year, bloom$Work.Date))
plot(unique(bloom$Year), rowSums(table(bloom$Year, bloom$Work.Date)))
unique(bloom$Year)
x<-rowSums(table(bloom$Year, bloom$Work.Date))#tabulate number of observations in each year
colsums(table(bloom$Year,bloom$Work.Date))
colSums(table(bloom$Year,bloom$Work.Date))
x<-rowSums(table(bloom$Year, bloom$Work.Date))#tabulate number of observations in each year
rowSums(table(bloom$Year, bloom$Work.Date))
2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015)
x<-c(1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,1996, 1997, 1998,1999, 2000,
2001, 2002, 2003, 2004,2005, 2006,
2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015)
y<-c(11, 9,0, 8, 6, 12, 1,0,0, 1,0,0, 3,0,0,0,0,0,
4, 2, 2, 10, 35, 41, 62, 15, 17, 25)#create column
4, 2, 2, 10, 35, 41, 62, 15, 17, 25, 1)#create column of #obs filling in missing years with 0
x<-c(1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,1996, 1997, 1998,1999, 2000,
y<-c(11, 9,0, 8, 6, 12, 1,0,0, 1,0,0, 3,0,0,0,0,0,
4, 2, 2, 10, 35, 41, 62, 15, 17, 25, 1)
end
y<-c(11, 9,0, 8, 6, 12, 1,0,0, 1,0,0, 3,0,0,0,0,0,
4, 2, 2, 10, 35, 41, 62, 15, 17, 25, 1)
plot(x,y)
barplot(x,y,
col="grey",     # set the color palette
main="Number of Seed Collections", # the main title
xlab="Year")       # x-axis label
counts<-table(x,y)
plot(x,y)#che
barplot(x)
plot(x,y)#check that data above look correct
barplot(y)
barplot(y, col-"grey", main="Number of Seed Collections", xlab="Year")#create bar plot
barplot(y, col="grey", main="Number of Seed Collections", xlab="Year")#create bar plot
barplot(y, names.arg=y,col="grey", main="Number of Seed Collections", xlab="Year")#create bar plot
barplot(y, names.arg=x,col="grey", main="Number of Seed Collections", xlab="Year")#create bar plot
barplot(y, names.arg=x,col="grey",
space=0 #creates no space between bars
main="Number of Seed Collections", xlab="Year")
barplot(y, names.arg=x,col="grey",
space=0, #creates no space between bars
main="Number of Seed Collections", xlab="Year")
barplot(y, names.arg=x,col="grey",
space=0, #creates no space between bars
srt=45,
main="Number of Seed Collections", xlab="Year")#create bar plot
barplot(y, names.arg=x,col="grey",
space=0, #creates no space between bars
srt=45,adj=1,
main="Number of Seed Collections", xlab="Year"
end
barplot(y, names.arg=x,col="grey",
space=0, #creates no space between bars
srt=45,adj=1,
main="Number of Seed Collections", xlab="Year")#
barplot(y, names.arg=x,col="grey",
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:100x, par("usr")[1], labels=lablist, srt=45, pos=1, xpd=TRUE)
text(x, par("usr")[1], labels=lablist, srt=45, pos=1, xpd=TRUE)
text(1:29, par("usr")[1], labels=x, srt=45, pos=1, xpd=TRUE)
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90, pos=1, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90, pos=.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90, pos=0.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90, pos=1, xpd=TRUE)#add labels and angle
text(1:29, par("usr")[1], labels=x, srt=90,adj=1, pos=1, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=1, pos=1, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=1, pos=.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=1, pos=1, cex=0.5 xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=1, pos=1, cex=0.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=0.5, pos=1, cex=0.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=0.5, pos=0, cex=0.5, xpd=TRUE)#add labels and angle
pos()
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,padj=1, pos=0, cex=0.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,padj=1, pos=1, cex=0.5, xpd=TRUE)#add labels and angle
pl
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,padj=0, pos=1, cex=0.5, xpd=TRUE)#add labels and angle
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=0, pos=1, cex=0.5, xpd=TRUE)#add labels and angle
end
barplot(y, col="grey", #names.arg=x, use this to label x axis if don't want to shift angle
space=0, #creates no space between bars
srt=45,adj=.5,
main="Number of Seed Collections", xlab="Year")#create bar plot
text(1:29, par("usr")[1], labels=x, srt=90,adj=0, pos=1, cex=0.5, xpd=TRUE)#add labels and angle
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("Q:\\Research\\All_Projects_by_Species\\"),
header = TRUE, as.is=TRUE)
head(bloom)
plot(bloom$Year,bloom$Raw_Precip, main="Precipitation by Year",xlab="Year", ylab="Precipitation (mm)")
abline(lm(bloom$Raw_Precip~bloom$Year))
summary(lm(bloom$Raw_Precip~bloom$Year))
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date by Year for All Species"),xlab="Year", ylab="Julian Date")
plot(bloom$Year,bloom$startDayOfYear,
main="First Collection Date by Year for All Species"),
xlab="Year", ylab="Julian Date")
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear$Year))
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
plot(lm(bloom$startDayOfYear ~bloom$Year))
#Bring in Q/All.Projects_by_species/aa_Spapefiles_Maps/aa_QGIS Projects/AlpinePhenologyproject/
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P://alpine-phenology/TB_tempPrecipData"),
header = TRUE, as.is=TRUE)
R_input_data/QR_r_input.csv
bloom<-read.csv(file.choose("P://alpine-phenology/TB_tempPrecipData"),
header = TRUE, as.is=TRUE)
R_input_data/QR_r_input.csv
stats<-read.csv(file.choose("P://alpine-phenology/app_spp_stats.csv"),
header = TRUE, as.is=TRUE)
bl50 <- subset(bloom, bloom$year_plant > 1949)
str(bl50)
head(bl50)
# Pull out the earliest bloom date per year per species
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/TB_tempPrecipData.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/all_spp_stats.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949)
str(bl50)
head(bl50)
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #Our dataset already has this subset but re-running as a double check
str(bl50)
head(bl50)
foo <- function(x){min(bl50$startDayOfYear~bl50$Year)}
names <- unique(bl50$Scientific.Name)		# N
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
JulBloomDate <- function(vari){	#vari <- "Year";
JulBloomDate <- function(vari){	#vari <- "Year";
setwd(path.expand("Q:/Research/All_Projects_by_Species/aa_Shapefiles_Maps/aa_QGIS Projects/Alpine Phenology Project/R_figures_alpine"))
namesID <- unique(bl50$sppListID)
rm(JYC)
JYC <- c()
stats<-c()
for(i in namesID){
spsub <- subset(bl50, sppListID == i)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
val <- as.vector(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
jpeg(filename = paste(blnew$Scientific.Name[1], vari, ".jpg"),
quality = 100)
colnum <- match(vari,names(blnew))
plot(blnew[,colnum], blnew$startDayOfYear,
main = paste(blnew$Scientific.Name[1], vari, sep = ""),
cex.main = 0.85,
xlab = paste(vari),
ylab = "Julian date of first bloom")
abline(lm(blnew$startDayOfYear~blnew[,colnum]))
dev.off()
graphics.off()
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
jul.yr.coef <- data.frame(
cbind(
data.frame(t(foo1$coefficients[2,])),
foo1$coefficients[1,1],
t(foo1$fstatistic),
Species = blnew$Scientific.Name[1],
foo1$adj.r.squared))
JYC <- rbind(JYC, jul.yr.coef)
}
str(JYC)
colnames(JYC) <- c("Slope", "StErr", "t.value", "p.value", "Intercept",
"F Stat", "numDF","denDF", "Species", "adj.r.squ")
JYC <<- JYC
}
JulBloomDate("Year")
YearJYC <- JYC
bloom<-read.csv(path.expand("P:/alpine-phenology/QR_final_R_plant_climate_data.csv"),
header = TRUE, as.is=TRUE)
hist(bloom$startDayOfYear)
plot(bloom$Year,bloom$startDayOfYear, main="First Collection Date for All Species",xlab="Year", ylab="Julian Date")
abline(lm(bloom$startDayOfYear~bloom$Year))
summary(lm(bloom$startDayOfYear~bloom$Year))
bl50 <- subset(bloom, bloom$year_plant > 1949) #O
re-running as a double check
str(bl50)
head(bl50)
names <- unique(bl50$Scientific.Name)		# Names includes synonyms, sspListID contains unique taxa
namesID <- unique(bl50$sppListID)
length(namesID)	# 290
head(namesID)
names(bl50)
table(bl50$sppListID, bl50$startDayOfYear)
namesID<-unique(bl50$sppListID)[1]
i<-unique(bl50$sppListID)[1]
spsub <- subset(bl50, sppListID == i)
spsub
i
length(spsub)
pyr <- tapply(spsub$startDayOfYear, spsub$Year, min)
pyr
length(pyr)
nrow(spsub)
table(bl50$sppListID,bl50$Year)
pyr
val <- as.vector(pyr)
val
str(pyr)
yrs <- as.numeric(names(pyr))
mins <- data.frame(cbind(julian = val, Year = yrs))
blnew <- c()
for(j in 1:nrow(mins)){
blnew <- rbind(blnew,
subset(spsub,
spsub$startDayOfYear == mins[j,1]
& spsub$Year == mins[j,2]))
}
head(mins)
blnew
blnew <- blnew[!duplicated(blnew[,c('earliestBloomDate','Year')]),]	#get rid of duplicates for a year
head(blnew)
foo1 <- summary(lm(blnew$startDayOfYear~blnew[,colnum]))
colnum <- match(vari,names(blnew))
colnum
